//
//  OrdersCoordinator.swift
//  TouchBistro
//
//  Generated by make package
//

import Platform
import UIKit
import SwiftUI

public protocol OrdersRouter: AnyObject {
    func ordersToSettings()
}

public class OrdersCoordinator: Coordinator {
    public var navigationController: UINavigationController
    private weak var router: OrdersRouter?

    public init(
        navigationController: UINavigationController,
        router: OrdersRouter,
        logger: Platform.Logger,
        featureFlag: Platform.FeatureFlagProvider
    ) {
        self.navigationController = navigationController
        self.router = router
        Logger.setLogger(logger)
        FeatureFlag.setProvider(featureFlag)
    }

    public func start() {
        Logger.debug("OrdersCoordinator start")
        let viewModel = OrdersListViewModel(router: self)
        let viewController = UIHostingController(rootView: OrdersList(viewModel))
        navigationController.pushViewController(viewController, animated: true)
    }

    public func stop() {
        Logger.debug("OrdersCoordinator stop")
    }

    deinit {
        Logger.debug("OrdersCoordinator deinit")
    }
}

extension OrdersCoordinator: OrdersListRouter {
    func navigateToSettings() {
        router?.ordersToSettings()
    }
}

