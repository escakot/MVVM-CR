//
//  FeatureFlag+Orders.swift
//  TouchBistro
//
//  Generated by make package
//
import Foundation
import Platform

enum FeatureFlagKey: String {
    case example
}

enum FeatureFlag {
    private(set) static var provider: Platform.FeatureFlagProvider?
    static func setProvider(_ provider: Platform.FeatureFlagProvider) {
        Self.provider = provider
    }

    static func variation(forKey flagKey: FeatureFlagKey, fallback: Bool) -> Bool {
        guard let provider = Self.provider else {
            preconditionFailure("FeatureFlagProvider must be set")
        }
        return provider._variation(forKey: flagKey, fallback: fallback)
    }
}
